services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: go_app_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: go_app_db
      MYSQL_USER: go_app_user
      MYSQL_PASSWORD: go_app_password
    ports:
      - "13306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - go_app_network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      timeout: 20s
      retries: 10

  # Golang Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go_app_backend
    restart: unless-stopped
    ports:
      - "18080:8080"
    environment:
      # Server Configuration
      - PORT=8080
      - HOST=0.0.0.0
      - GIN_MODE=debug
      
      # Database Configuration
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=go_app_user
      - DB_PASSWORD=go_app_password
      - DB_NAME=go_app_db
      
      # Redis Configuration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      
      # JWT Configuration
      - JWT_SECRET=your-jwt-secret-key-change-in-production
      - JWT_ACCESS_EXPIRY=24
      - JWT_REFRESH_EXPIRY=168
      
      # Logging
      - LOG_LEVEL=info
      
      # Email Configuration (optional)
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_USERNAME=
      - SMTP_PASSWORD=
      - FROM_EMAIL=
      - FROM_NAME=Go App
      
      # Upload Configuration
      - UPLOAD_MAX_FILE_SIZE=10485760
      - UPLOAD_ALLOWED_EXTS=.jpg,.jpeg,.png,.gif,.webp,.pdf,.doc,.docx,.txt,.csv
      - UPLOAD_PATH=uploads
      - UPLOAD_PUBLIC_URL=http://localhost:18080
      - UPLOAD_IMAGE_MAX_SIZE=5242880
      - UPLOAD_DOCUMENT_MAX_SIZE=20971520
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - go_app_network
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      timeout: 5s
      retries: 3
      interval: 30s
      start_period: 10s

  # Redis 
  redis:
    image: redis:7-alpine
    container_name: go_app_redis
    restart: unless-stopped
    ports:
      - "16379:6379"
    volumes:
      - redis_data:/data
    networks:
      - go_app_network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 5s
      retries: 5
      interval: 10s

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  go_app_network:
    driver: bridge
